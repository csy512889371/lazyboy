#ifndef CHESSBOARD_H
#define CHESSBOARD_H
#include <vector>
#include <cstring>
using namespace std;

class ChessBoard
{
public:
	ChessBoard();
	ChessBoard(ChessBoard &x, int move);
public: 
	int whatOn[256];	// 记录棋盘上的棋子
	int whereIs[64];	// 记录棋子所在位置
	int row[16];		// 记录行的二进制信息
	int col[16];		// 记录列的二进制信息
public:
	vector<int> move;	// 记录着法
public:
	int turnWho;
	bool turnRed();
	bool turnBlack();
private:
	void get_origin_whatOn();
	void get_whereIs();
	void get_row();
	void get_col();
};

const int RED = 16, BLACK = 32, EMPTY = 0, OBSTACLE = 63;

const int ORIGIN_CHESSBOARD[16][16] = {
{ 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63 },
{ 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63 },
{ 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63 },
{ 63, 63, 63, 17, 19, 23, 25, 32, 26, 24, 20, 18, 63, 63, 63, 63 },
{ 63, 63, 63,   0,   0,   0,   0,   0,   0,   0,   0,   0, 63, 63, 63, 63 },
{ 63, 63, 63,   0, 21,   0,   0,   0,   0,   0, 22,   0, 63, 63, 63, 63 },
{ 63, 63, 63, 27,   0, 28,   0, 29,   0, 30,   0, 31, 63, 63, 63, 63 },
{ 63, 63, 63,   0,   0,   0,   0,   0,   0,   0,   0,   0, 63, 63, 63, 63 },
{ 63, 63, 63,   0,   0,   0,   0,   0,   0,   0,   0,   0, 63, 63, 63, 63 },
{ 63, 63, 63, 11,   0, 12,   0, 13,   0, 14,   0, 15, 63, 63, 63, 63 },
{ 63, 63, 63,   0,   5,   0,   0,   0,   0,   0,   6,   0, 63, 63, 63, 63 },
{ 63, 63, 63,   0,   0,   0,   0,   0,   0,   0,   0,   0, 63, 63, 63, 63 },
{ 63, 63, 63,   1,   3,   7,   9, 16, 10,   8,   4,   2, 63, 63, 63, 63 },
{ 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63 },
{ 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63 },
{ 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63 },
};

#endif