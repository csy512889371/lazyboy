#ifndef SEARCH_H_
#define SEARCH_H_

#include "base.h"
#include "position.h"
#include "rollback.h"

const int SEARCH_MAX_DEPTH = 80;

extern PositionStruct pos; // 当前搜索局面
extern RollBackListStruct roll; // 回滚着法表

const int nBest = 128;

struct SearchStruct {
	int bmv[nBest]; // 最佳着法
	int bvl[nBest]; // 最优得分
	int nNode; // 总节点数
	int nBeta; // beta点个数
	int depth;
};
extern SearchStruct Search;

struct SearchTreeStruct {
	int to;
	int next;
	int mv;
};
const int NNODE = 1000010;
extern SearchTreeStruct SearchTree[NNODE];
extern int head[NNODE];
extern int nNode;

inline void InitSearchTree ( void ) {
	for ( int i = 0; i < NNode; i ++ ) {
		head[i] = -1;
		SearchTree[i].to = 0;
		SearchTree[i].next = -1;
		SearchTree[i].mv = 0;
	}
	nNode = 0;
}

inline void AddEdge ( int id, int mv ) {

}

int SearchMain ( void );

#endif /* SEARCH_H_ */
