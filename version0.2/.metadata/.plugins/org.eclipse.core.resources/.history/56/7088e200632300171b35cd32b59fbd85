#include "hashtable.h"
#include "base.h"
#include "search.h"

HashTableStruct *HashTable;
int HashTableNum;

void InitHashTable ( int num ) {
	HashTableNum = num;
	HashTable = ( HashTableStruct * ) malloc ( HashTableNum * sizeof(HashTableStruct) );
}

void ClearHashTable ( void ) {
	memset ( HashTable, 0, sizeof HashTableStruct );
}

void DelHashTable ( void ) {
	if ( HashTable ) {
		delete [] HashTable;
	}
}

void InsertHashTable ( int depth, int val ) {
	int t = Search.pos.zobrist.first & (HashTableNum - 1);
	if ( Search.pos.zobrist.first == HashTable[t].zorb1 && Search.pos.zobrist.second == HashTable[t].zorb2 ) {
		if ( depth >= HashTable[t].depth ) {

		}
	}
}

int QueryHashTable ( int depth, int val ) {
	return 0;
}

