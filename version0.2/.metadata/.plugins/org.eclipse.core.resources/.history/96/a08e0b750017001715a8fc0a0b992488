/*
 * search.cpp
 *
 *  Created on: 2017年3月25日
 *      Author: peteryuanpan
 */

#include "base.h"

SearchStruct search;

int Evaluate ( void ) {
	return search.pos.PlayerRed () ? -MATE_VALUE : MATE_VALUE;
}

// 无害裁剪
int HarmlessPruning ( int beta ) {
	int vRep;

	if ( search.pos.IsDraw() ) {
		return 0; // eleeye上表示，为了安全起见，不用pos.DrawValue()
	}

	vRep = search.pos.RepStatus ();
	if ( vRep > 0 ) {
		return search.pos.RepValue ( vRep );
	}

	return -MATE_VALUE;
}

// 静态搜索
int SearchQuiesc ( int alpha, int beta ) {
	int mv, v;
	int bestv = -MATE_VALUE;
	MoveSortStruct mvsort;

	v = HarmlessPruning ( beta );
	if ( v > -MATE_VALUE ) {
		return v;
	}

	if ( search.pos.nDistance == LIMIT_DEPTH ) {
		return Evaluate ();
	}

	mvsort.InitQuiesc ();

	while ( (mv = mvsort.NextQuiesc()) != 0 ) {
		search.pos.MakeMove (mv);
		v = -SearchQuiesc ( -beta, -alpha );
		search.pos.UndoMakeMove (mv);
		if ( v > bestv ) {
			bestv = v;
			if ( v >= beta ) {
				return v;
			}
			if ( v > alpha ) {
				alpha = v;
			}
		}
	}

	return bestv;
}

int Search ( int depth, int alpha, int beta ) {
	int mv, v;
	int bestv = -MATE_VALUE;
	MoveSortStruct mvsort;

	if ( depth <= 0 ) {
		return SearchQuiesc ( alpha, beta );
	}

	v = HarmlessPruning ( beta );
	if ( v > -MATE_VALUE ) {
		return v;
	}

	if ( search.pos.nDistance == LIMIT_DEPTH ) {
		return Evaluate ();
	}

	mvsort.InitEnd ();

	while ( (mv = mvsort.NextEnd()) != 0 ) {
		search.pos.MakeMove ( mv ); // 走一步
		int v = -Search ( depth - 1, -beta, -alpha ); // 搜下一层
		search.pos.UndoMakeMove ( mv ); // 回一步
		if ( v > bestv ) {
			bestv = v;
			if ( v >= beta ) {
				return v;
			}
			if ( v > alpha ) {
				alpha = v;
			}
		}
	}

	return bestv;
}
